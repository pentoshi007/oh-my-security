{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"9645c5aead6c54b6-DEL","connection":"keep-alive","content-encoding":"gzip","content-location":"/daily_content?date=eq.2025-07-17&select=%2A","content-profile":"public","content-range":"0-0/*","content-type":"application/vnd.pgrst.object+json; charset=utf-8","date":"Thu, 24 Jul 2025 19:19:58 GMT","sb-gateway-version":"1","sb-project-ref":"pjgouvtbcjagpegszgfz","sb-request-id":"01983de0-c935-7fcc-9f60-d63b0e9278f6","server":"cloudflare","set-cookie":"__cf_bm=7r88UczSASREYgI.3_95WYyjRInHJvIWGx6l.57V.lg-1753384798-1.0.1.1-an_IvxjZBBEbQwI_.TKtEIqVgmlV3Kh4NES95ZPc.UUxs5JcZreqmHuDrSyRRdEsaRFyUAYawduHu79x.iWeZnwEOt8vEYwYoX4J_5romBM; path=/; expires=Thu, 24-Jul-25 19:49:58 GMT; domain=.supabase.co; HttpOnly; Secure; SameSite=None","strict-transport-security":"max-age=31536000; includeSubDomains; preload","transfer-encoding":"chunked","vary":"Accept-Encoding","x-content-type-options":"nosniff","x-envoy-attempt-count":"1","x-envoy-upstream-service-time":"22"},"body":"","status":200,"url":"https://pjgouvtbcjagpegszgfz.supabase.co/rest/v1/daily_content?select=*&date=eq.2025-07-17"},"revalidate":31536000,"tags":[]}